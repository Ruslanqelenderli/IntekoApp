<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZTP6AHQ6
        /wBfMPQFXi/xEF0v7xhdL+8YXi/xD2Aw9AWHPP8AZjH5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjMfgASSbPAF4v
        8BFdLu5GXS7uhFwu7bJcLu3NXC7s2Vwu7NlcLu3MXC7tsF0u7YJdLu5FXi/xEUklzgBjMvgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkMvsAXS/uAF4v
        8A9dLu5jXC7txVwu7PZcLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7PVcLu3FXS7uZF4v
        8BBdLu4AZTP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYC/0AE8o
        zABdLu8zXC7ttVwu7PpcLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz6XC7tt10u7zRJJMQAXzDzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8w
        8gBqN/8AXS7uTVwu7NxcLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s/1wu7P9cLuz/XC7t3V0u7k5rN/8AXzDyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABfMPMAWSvjAF0u7k5cLuzmXC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s5l0u7k5ZK+QAXzDzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAYjD3AFwu7QBdLu41XC7s3Vwu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s3F0u7jRcLu0AYTD4AAAA
        AAAAAAAAAAAAAAAAAABdL+8AXi/wEVwu7bdcLuz/XC7s/1wu7P9cLuz/YDPt/2E17f9hNe3/YTXt/2E1
        7f9hNe3/YTXt/2E17f9hNe3/YTXt/2E17f9hNe3/YTXt/2Az7f9cLuz/XC7s/1wu7P9cLuz/XC7ttl4u
        8BFeLu8AAAAAAAAAAAAAAAAAYDD0AFst6QBdLu5nXC7s+1wu7P9cLuz/Wizs/3ZQ7//Mvvj/1cn5/9TI
        +f/UyPn/1Mj5/9TI+f/UyPn/1Mj5/9TI+f/UyPn/1Mj5/9TI+f/Vyfn/zL34/3ZP7/9aLOz/XC7s/1wu
        7P9cLuz7XS7uZ1ot6QBgMPUAAAAAAAAAAABeL/AAXi/wE1wu7cdcLuz/XC7s/1wu7P9ZK+z/jGzx//z7
        /f////3////9/////f////3////9/////f////3////9/////f////3////9/////f/8+/3/i2vx/1kr
        7P9cLuz/XC7s/1wu7P9cLu3IXi/wE14v8AAAAAAAAAAAAFwu7QBdLu5JXC7s9lwu7P9cLuz/XC7s/1or
        7P+AXPD/5t/6/+3p+//t6Pv/7ej7/+3o+//t6Pv/7ej7/+3o+//t6Pv/7ej7/+3o+//t6Pv/7en7/+Xe
        +v9/W/D/Wivs/1wu7P9cLuz/XC7s/1wu7PddLu5LXC7tAAAAAABhMPcAWS3lAF0u7YdcLuz/XC7s/1wu
        7P9cLuz/XC7s/18x7P9wR+7/c0zu/3NM7v9zTO7/c0zu/3NM7v9zTO7/c0zu/3NM7v9zTO7/c0zu/3NM
        7v9zTO7/b0fu/14x7P9cLuz/XC7s/1wu7P9cLuz/XC7s/10u7YlZLOQAYDD3AF8v8wBfMPQGXC7ttFwu
        7P9cLuz/XC7s/1wu7P9cLuz/Wy3s/1gp7P9YKOz/WCjs/1go7P9YKOz/WCjs/1go7P9YKOz/WCjs/1go
        7P9YKOz/WCjs/1go7P9YKez/Wy3s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7ttl8v9AdfL/MAXi/xAF4v
        8RFcLu3NXC7s/1wu7P9cLuz/XC7s/1st7P9mOu3/kHDx/5Z48v+WePL/lnjy/5Z48v+WePL/lnjy/5Z4
        8v+WePL/lnjy/5Z48v+WePL/lnjy/5Bw8f9mOu3/Wy3s/1wu7P9cLuz/XC7s/1wu7P9cLu3PXi/xEV4v
        8QBdLu8AXS7uGFwu7NlcLuz/XC7s/1wu7P9cLuz/Wivs/4hn8f/39vz//Pz9//z8/f/8/P3//Pz9//z8
        /f/8/P3//Pz9//z8/f/8/P3//Pz9//z8/f/8/P3/9/X8/4dm8f9aK+z/XC7s/1wu7P9cLuz/XC7s/1wu
        7NldLu4YXS7uAF0u7gBdLu4ZXC7s2lwu7P9cLuz/XC7s/1wu7P9ZK+z/imrx//v6/f////3////9////
        /f////3////9/////f////3////9/////f////3////9/////f/7+v3/imnx/1kr7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s2V0v7hhdL+8AXi/wAF4v8BJcLu3QXC7s/1wu7P9cLuz/XC7s/1st7P9rQe7/o4nz/6qT
        9P+qkvT/qpL0/6qS9P+qkvT/qpL0/6qS9P+qk/T/qpP0/6uT9P+rk/T/q5T0/6OK8/9qQO7/Wy3s/1wu
        7P9cLuz/XC7s/1wu7P9cLu3NXi/wEV4v8QBfMPIAXzDzB1wu7bdcLuz/XC7s/1wu7P9cLuz/XC7s/1st
        7P9YKez/WCns/1gp7P9YKez/WCns/1gp7P9YKez/WCns/1gp7P9YKez/WCns/1gp7P9YKez/WCns/1st
        7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7bRfMPQGXi/zAGEx9wBYLOIAXS7tilwu7P9cLuz/XC7s/1wu
        7P9cLuz/XjHs/29G7v9yS+7/ckvu/3JL7v9yS+7/ckvu/3JL7v9yS+7/ckvu/3JL7v9yS+7/ckvu/3JL
        7v9vRu7/XjHs/1wu7P9cLuz/XC7s/1wu7P9cLuz/XS7tiFks5QBhMPcAAAAAAFwu7QBdLu5MXC7s91wu
        7P9cLuz/XC7s/1or7P+AXPD/5d/6/+zp+//s6Pv/7Oj7/+zo+//s6Pv/7Oj7/+zo+//s6Pv/7Oj7/+zo
        +//s6Pv/7On7/+Xe+v9/W/D/Wivs/1wu7P9cLuz/XC7s/1wu7PddLu5LXC7tAAAAAAAAAAAAXi/vAF4v
        8BRcLu3JXC7s/1wu7P9cLuz/WSvs/4xs8f/8+/3////9/////f////3////9/////f////3////9////
        /f////3////9/////f////3//Pv9/4tr8f9ZK+z/XC7s/1wu7P9cLuz/XC7tyl4v8BRdL+8AAAAAAAAA
        AABgMPQAWy3pAF0u7WlcLuz7XC7s/1wu7P9aLOz/d1Dv/8y/+P/Vyvn/1cn5/9XJ+f/Vyfn/1cn5/9XJ
        +f/Vyfn/1cn5/9XJ+f/Vyfn/1cn5/9bK+f/Mvvj/dlDv/1os7P9cLuz/XC7s/1wu7PxdLu5rWi3pAGAv
        8wAAAAAAAAAAAAAAAABeL+8AXi/wEVwu7bhcLuz/XC7s/1wu7P9cLuz/YDPt/2I17f9iNe3/YjXt/2I1
        7f9iNe3/YjXt/2I17f9iNe3/YjXt/2I17f9iNe3/YjXt/2Az7f9cLuz/XC7s/1wu7P9cLuz/XC7tvF4u
        8BNdLu8AAAAAAAAAAAAAAAAAAAAAAGAx9wBcLu0AXS7uNlwu7N5cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7OBdLu45XC7sAGEx9wAAAAAAAAAAAAAAAAAAAAAAAAAAAF4v8gBYK+IAXS7uUVwu7OhcLuz/XC7s/1wu
        7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuzoXS7uU1Up2gBfL/IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4v8gBiMv4BXS7uU1wu
        7eFcLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7t310u7lFiMv0BXi/yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8v
        8wB3Pv8AXS7vOVwu7b1cLuz8XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s+1wu7bpdLu83////AGAw8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGMy+wBcLuwAXi/wE10u7mxcLu3LXC7s+Fwu7P9cLuz/XC7s/1wu7P9cLuz/XC7s/1wu
        7P9cLuz/XC7s+Fwu7ctdLu5qXi/wEl0u7QBjMvoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiMfcAczn/AF4v8BRdLu5MXS7tilwu7bdcLu3PXC7t2lwu
        7dtcLu3RXC7tuV0u7Y1dLu5OXi/wFJRK/wBgMPYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMz+gBmNf8AXzDzB14v
        8BJdL/AZXi/wGl4v8BNfMPMHZTL8AGMx+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////4H///wAP//wAA//4AAH/8AAA/+AAAH/AAAA/gAAAH4AAAB8AA
        AAPAAAADwAAAA4AAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAPAAAADwAAAA+AAAAfgAAAH8AAAD/gA
        AB/4AAAf/gAAf/8AAP//wAP///gf//////8=
</value>
  </data>
</root>